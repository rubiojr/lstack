#!/bin/bash
set -e

BASE_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../" && pwd )"

lstack() {
  $BASE_PATH/lstack $@
}

cleanup() {
  lstack destroy >/dev/null 2>&1 || true
}
trap "cleanup" EXIT

echo "** Testing bootstrap..."
lstack --nonyancat bootstrap

# Wait for the instance to boot
echo "** Testing the Cirros instance booted..."
for i in $(seq 1 10); do
  cirros_ip=$(lstack nova list | grep test | grep -o "private=.*\s"|cut -d= -f2|tr -d ' ') \
    || true
  [ -n "$cirros_ip" ] && break

  sleep 5
done

if [ -z "$cirros_ip" ]; then
  >&2 echo Cirros instance IP not found.
  exit 1
fi

#
# Test connectivity to the instance
#

# A test Cirros VM is created by default when bootstrapping
# The SSH port should be reachable if everything went fine.
echo "** Testing Cirros instance SSH ($cirros_ip)..."
# SSH daemon may take some time to come up, so we need to wait.
for i in $(seq 1 10); do
  (lstack ssh "echo | nc $cirros_ip 22" | grep dropbear > /dev/null) && {
    ssh_ok=1
    break
  }

  sleep 5
done
if [ -z "$ssh_ok" ]; then
  >&2 echo Cirros instance SSH test failed!
  exit 1
fi

#
# Test 22 port forwarding
#
echo "** Testing TCP/22 forwarding..."
ip=$(lstack ip)
lstack forward test 22
# may not be ready, retry
read -r ssh_ok < /dev/tcp/$ip/22 || {
  sleep 2
  read -r ssh_ok < /dev/tcp/$ip/22
}
# 22/tcp now goes to the Cirros instance so it should be the dropbear SSH server
if ! [[ "$ssh_ok" =~ dropbear ]]; then
  >&2 echo "SSH forward test (instance) failed!"
  exit 1
fi

# Container's OpenSSH now should listen on 2200/tcp
read -r ssh_ok < /dev/tcp/$ip/2200
if ! [[ "$ssh_ok" =~ OpenSSH ]]; then
  >&2 echo "SSH forward test (container) failed!"
  exit 1
fi

echo "** Testing destroy..."
lstack destroy
echo "** Tests OK!"
